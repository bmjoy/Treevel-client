name: CI
on:
  pull_request:
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
jobs:
  test:
    name: ${{ matrix.testMode }} Test on Unity ${{ matrix.unityVersion }}
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2021.1.2f1
        testMode:
          - editmode
          - playmode
    runs-on: ubuntu-latest
    container:
      # with linux-il2cpp. image from https://hub.docker.com/r/gableroux/unity3d/tags
      image: unityci/editor:ubuntu-${{ matrix.unityVersion }}-linux-il2cpp-0
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache
        uses: actions/cache@v2.1.4
        with:
          path: Library
          key: Library-${{ hashFiles('**/packages-lock.json') }}
          restore-keys: |
            Library-
      - name: Activate Unity
        run: echo -n "$UNITY_LICENSE" > .Unity.ulf && /opt/unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .Unity.ulf || exit 0
      - name: Build Player Contents
        run: pwd && ls -al && /opt/unity/Editor/Unity -batchmode -quit -projectPath . -executeMethod Treevel.Editor.AddressableProcessor.BuildContents_iOS
#      - name: Unity - Test Runner
#        id: tests
#        shell: bash
#        run: |
#          /Applications/Unity/Hub/Editor/$unityVersion/Unity.app/Contents/MacOS/Unity -batchmode -logFile $artifactsPath/$testMode.log -projectPath . -runTests -testPlatform $testMode -testResults $artifactsPath/$testMode-result.xml 
#        env:
#          unityVersion: ${{ matrix.unityVersion }}
##          githubToken: ${{ secrets.GITHUB_TOKEN }}
#          artifactsPath: ${{ matrix.testMode }}-artifacts
#          testMode: ${{ matrix.testMode }}
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v2
#        with: 
#          path: ${{ matrix.testMode }}-artifacts
